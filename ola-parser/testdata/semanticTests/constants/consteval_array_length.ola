contract C {
    u256 const a = 12;
    u256 const b = 10;

    fn f() -> (u256, u256) {
        u256[(a / b) * b]  x;
        return (x.length, (a / b) * b);
    }
}
// ====
// compileToEwasm: also
// compileViaYul: true
// ----
// fn c()  ->
// f()  -> 0x0a, 0x0a
